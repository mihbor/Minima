/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // test coverage
    id 'jacoco'

    // eclipse classpath generation: ./gradlew cleanEclipse eclipse
    id 'eclipse'

    // shadowJar plugin to build fat jar
    id 'com.github.johnrengelman.shadow' version '6.1.0'

    // Plugin to publish artifacts to github and maven
    id 'maven-publish'

    id 'com.palantir.docker' version '0.34.0'
}

sourceCompatibility = JavaVersion.VERSION_11

//group 'org.minima'
//version '0.103.5'


repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    //implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

	implementation 'org.mozilla:rhino:1.7.14'

//    implementation 'com.jcraft:jsch:0.1.55'
    
    implementation 'com.h2database:h2:2.1.214'
    
 	implementation 'org.bouncycastle:bcpkix-jdk15on:1.69'
 	
 	implementation "mysql:mysql-connector-java:8.0.26"

  implementation 'org.postgresql:postgresql:42.5.1'
 	
 	//implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'
 	
 //	implementation 'org.bouncycastle:bcpprov-jdk15on:1.69'
 	//implementation 'org.bouncycastle:bcputil-jdk15on:1.69'
}

sourceSets {
    main {
         java {
            srcDirs = ['src']
         }
         
        resources {
            srcDirs = ['resources']
        }
    }

    test {
        java {
            srcDirs = ['test']
        }
    }
}

// reproducible builds
tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

compileJava {
	sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    //options.compilerArgs << '-something'
}

application {
    // Define the main class for the application.
    mainClassName = 'org.minima.Minima'
    //mainClass.set("org.minima.Start") // new syntax for gradle 6.7+, plugins not compatible yet
}

jar {
    manifest {
        attributes 'Main-Class': 'org.minima.Minima'
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/minima-global/Minima"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

docker {
    name 'minimaglobal/minima:1.0.21-psql'
    dockerfile project.file('docker/Dockerfile')
    
    buildx true
    push false
    platform 'linux/amd64'
    
    files tasks.shadowJar, "$rootDir/docker/dapps"
    copySpec.from("$buildDir/lib/minima-all.jar",).into(".")
    copySpec.from("docker/dapps/*").into(".")
    copySpec.from("docker/minima.config").into(".")
    copySpec.from("docker/minima").into(".")
}

/*test {
    dependsOn cleanTest
    testLogging.showStandardStreams = true
}*/